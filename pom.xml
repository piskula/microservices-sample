<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
    </parent>

    <groupId>sk.momosi.services</groupId>
    <artifactId>parent-server</artifactId>
    <name>Parent Application</name>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <kotlin.version>1.2.71</kotlin.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <!-- internal API library version -->
        <api.version>0.0.1</api.version>
    </properties>

    <modules>
        <module>config-server</module>
        <module>discovery-service</module>
        <module>api-server</module>
        <module>data-server</module>
        <module>employee-server</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <!-- Feign clients, when you need to use other microservice interface -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>1.4.7.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>2.2.2.RELEASE</version>
                <!-- from this we usually exclude XML serialization in microservices except DISCOVERY -->
            </dependency>
            <!-- we use this JSON serializer, if we do not use default XML -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>2.9.9</version>
            </dependency>

            <!-- configuration fetching -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>2.2.2.RELEASE</version>
            </dependency>

            <!-- internal interfaces -->
            <dependency>
                <groupId>sk.momosi.servicesinterfaces</groupId>
                <artifactId>services-interfaces-jvm</artifactId>
                <version>${api.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <dependencies>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>

    </dependencies>
</project>
